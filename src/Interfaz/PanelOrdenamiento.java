/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaz;

import static Interfaz.FramePrincipal.contenedor2;
import static Interfaz.PanelUsuarios.Tabla;
import Ordenamiento.OrdenamientoShell;
import java.awt.Color;
import javax.swing.DefaultListModel;

public class PanelOrdenamiento extends javax.swing.JPanel {

    // Declaramos el ordenamiento
    OrdenamientoShell shellSort = new OrdenamientoShell();
    
    private String[] vecOrg, vecOrd;
    public DefaultListModel modeloOrg = new DefaultListModel();
    public DefaultListModel modeloOrd = new DefaultListModel();
    private int numIC = 0; // Número de intercambios actuales
    private int numPasos = 0; // Número de pasos o recorridos realizados
        
    public PanelOrdenamiento() {
        
        initComponents();
        
        iniDatVecOrg();
        mostrarVecOrg();
        
        iniDatVecOrd();
        // Realizar ordenamiento
        shellSort.shell(vecOrg);
        
        mostrarListaVecOrd();
        
        // Actualizar datos del estado actual del ordenamiento (paso a paso)
        actualizarEstadoOrd();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        VectorOrdenado = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        VectorOriginal = new javax.swing.JList<>();
        TituloPanel6 = new javax.swing.JLabel();
        Btn_Resetear = new javax.swing.JButton();
        Btn_Ordenar = new javax.swing.JButton();
        TxtInput_comparado_n1 = new javax.swing.JTextField();
        TxtInput_proxIC_n1 = new javax.swing.JTextField();
        TxtInput_proxIC_n2 = new javax.swing.JTextField();
        TxtInput_comparado_n2 = new javax.swing.JTextField();
        txt_numPasos = new javax.swing.JLabel();
        IconCompletado = new javax.swing.JLabel();
        TituloPanel12 = new javax.swing.JLabel();
        TituloPanel10 = new javax.swing.JLabel();
        TituloPanel11 = new javax.swing.JLabel();
        TituloPanel8 = new javax.swing.JLabel();
        TituloPanel9 = new javax.swing.JLabel();
        tituloVecORDENADO = new javax.swing.JLabel();
        TituloPanel3 = new javax.swing.JLabel();
        TituloPanel1 = new javax.swing.JLabel();
        txt_numIntercambio = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        DescripcionEstado = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 87, 87));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 10, 40));

        VectorOrdenado.setBackground(new java.awt.Color(255, 255, 255));
        VectorOrdenado.setBorder(null);
        VectorOrdenado.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        VectorOrdenado.setForeground(new java.awt.Color(0, 151, 178));
        VectorOrdenado.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        VectorOrdenado.setToolTipText("");
        VectorOrdenado.setSelectionBackground(new java.awt.Color(255, 153, 153));
        VectorOrdenado.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(VectorOrdenado);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 160, 380));

        VectorOriginal.setBackground(new java.awt.Color(255, 255, 255));
        VectorOriginal.setBorder(null);
        VectorOriginal.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        VectorOriginal.setForeground(new java.awt.Color(0, 151, 178));
        VectorOriginal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        VectorOriginal.setToolTipText("");
        VectorOriginal.setSelectionBackground(new java.awt.Color(217, 217, 217));
        jScrollPane1.setViewportView(VectorOriginal);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 160, 380));

        TituloPanel6.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel6.setFont(new java.awt.Font("Latha", 1, 24)); // NOI18N
        TituloPanel6.setForeground(new java.awt.Color(255, 49, 49));
        TituloPanel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel6.setText("Vector original");
        TituloPanel6.setIconTextGap(15);
        add(TituloPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 180, 40));

        Btn_Resetear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_resetNorm.png"))); // NOI18N
        Btn_Resetear.setToolTipText("");
        Btn_Resetear.setContentAreaFilled(false);
        Btn_Resetear.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_resetPsar.png"))); // NOI18N
        Btn_Resetear.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_resetClick.png"))); // NOI18N
        Btn_Resetear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Btn_ResetearMouseClicked(evt);
            }
        });
        add(Btn_Resetear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 520, 70, 60));

        Btn_Ordenar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_orNorm.png"))); // NOI18N
        Btn_Ordenar.setToolTipText("");
        Btn_Ordenar.setContentAreaFilled(false);
        Btn_Ordenar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_orPasar.png"))); // NOI18N
        Btn_Ordenar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Btn_orClick.png"))); // NOI18N
        Btn_Ordenar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Btn_OrdenarMouseClicked(evt);
            }
        });
        Btn_Ordenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_OrdenarActionPerformed(evt);
            }
        });
        add(Btn_Ordenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 520, 360, 60));

        TxtInput_comparado_n1.setBackground(new java.awt.Color(255, 255, 255));
        TxtInput_comparado_n1.setFont(new java.awt.Font("Latha", 1, 15)); // NOI18N
        TxtInput_comparado_n1.setForeground(new java.awt.Color(11, 69, 119));
        TxtInput_comparado_n1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInput_comparado_n1.setToolTipText("");
        TxtInput_comparado_n1.setBorder(null);
        TxtInput_comparado_n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtInput_comparado_n1ActionPerformed(evt);
            }
        });
        add(TxtInput_comparado_n1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 70, 30));

        TxtInput_proxIC_n1.setBackground(new java.awt.Color(255, 255, 255));
        TxtInput_proxIC_n1.setFont(new java.awt.Font("Latha", 1, 15)); // NOI18N
        TxtInput_proxIC_n1.setForeground(new java.awt.Color(11, 69, 119));
        TxtInput_proxIC_n1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInput_proxIC_n1.setToolTipText("");
        TxtInput_proxIC_n1.setBorder(null);
        TxtInput_proxIC_n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtInput_proxIC_n1ActionPerformed(evt);
            }
        });
        add(TxtInput_proxIC_n1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 70, 30));

        TxtInput_proxIC_n2.setBackground(new java.awt.Color(255, 255, 255));
        TxtInput_proxIC_n2.setFont(new java.awt.Font("Latha", 1, 15)); // NOI18N
        TxtInput_proxIC_n2.setForeground(new java.awt.Color(11, 69, 119));
        TxtInput_proxIC_n2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInput_proxIC_n2.setToolTipText("");
        TxtInput_proxIC_n2.setBorder(null);
        TxtInput_proxIC_n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtInput_proxIC_n2ActionPerformed(evt);
            }
        });
        add(TxtInput_proxIC_n2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, 70, 30));

        TxtInput_comparado_n2.setBackground(new java.awt.Color(255, 255, 255));
        TxtInput_comparado_n2.setFont(new java.awt.Font("Latha", 1, 15)); // NOI18N
        TxtInput_comparado_n2.setForeground(new java.awt.Color(11, 69, 119));
        TxtInput_comparado_n2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInput_comparado_n2.setToolTipText("");
        TxtInput_comparado_n2.setBorder(null);
        TxtInput_comparado_n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtInput_comparado_n2ActionPerformed(evt);
            }
        });
        add(TxtInput_comparado_n2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 70, 30));

        txt_numPasos.setBackground(new java.awt.Color(0, 0, 0));
        txt_numPasos.setFont(new java.awt.Font("Latha", 1, 18)); // NOI18N
        txt_numPasos.setForeground(new java.awt.Color(255, 49, 49));
        txt_numPasos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_numPasos.setText(" Paso 0/8");
        txt_numPasos.setAutoscrolls(true);
        txt_numPasos.setIconTextGap(15);
        add(txt_numPasos, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 140, 20));

        IconCompletado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/completado.png"))); // NOI18N
        add(IconCompletado, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 520, 420, 90));

        TituloPanel12.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel12.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel12.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel12.setText("Resetear");
        TituloPanel12.setAutoscrolls(true);
        TituloPanel12.setIconTextGap(15);
        add(TituloPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 500, 70, 30));

        TituloPanel10.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel10.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel10.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondotxt.png"))); // NOI18N
        TituloPanel10.setAutoscrolls(true);
        TituloPanel10.setIconTextGap(15);
        add(TituloPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 130, 90));

        TituloPanel11.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel11.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel11.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondotxt.png"))); // NOI18N
        TituloPanel11.setAutoscrolls(true);
        TituloPanel11.setIconTextGap(15);
        add(TituloPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 410, 130, 90));

        TituloPanel8.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel8.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel8.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondotxt.png"))); // NOI18N
        TituloPanel8.setAutoscrolls(true);
        TituloPanel8.setIconTextGap(15);
        add(TituloPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 290, 130, 90));

        TituloPanel9.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel9.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel9.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondotxt.png"))); // NOI18N
        TituloPanel9.setAutoscrolls(true);
        TituloPanel9.setIconTextGap(15);
        add(TituloPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 130, 90));

        tituloVecORDENADO.setBackground(new java.awt.Color(0, 0, 0));
        tituloVecORDENADO.setFont(new java.awt.Font("Latha", 1, 24)); // NOI18N
        tituloVecORDENADO.setForeground(new java.awt.Color(255, 49, 49));
        tituloVecORDENADO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tituloVecORDENADO.setIconTextGap(15);
        add(tituloVecORDENADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, 220, 40));

        TituloPanel3.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel3.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        TituloPanel3.setForeground(new java.awt.Color(115, 115, 115));
        TituloPanel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel3.setText("Comparar");
        TituloPanel3.setAutoscrolls(true);
        TituloPanel3.setIconTextGap(15);
        add(TituloPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 220, 30));

        TituloPanel1.setBackground(new java.awt.Color(0, 0, 0));
        TituloPanel1.setFont(new java.awt.Font("Latha", 1, 24)); // NOI18N
        TituloPanel1.setForeground(new java.awt.Color(255, 49, 49));
        TituloPanel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPanel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/decorativo3.png"))); // NOI18N
        TituloPanel1.setText("Metodo shell");
        TituloPanel1.setIconTextGap(15);
        add(TituloPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 270, 100));

        txt_numIntercambio.setBackground(new java.awt.Color(0, 0, 0));
        txt_numIntercambio.setFont(new java.awt.Font("Latha", 1, 18)); // NOI18N
        txt_numIntercambio.setForeground(new java.awt.Color(255, 49, 49));
        txt_numIntercambio.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_numIntercambio.setText(" Intercambio 0/8");
        txt_numIntercambio.setAutoscrolls(true);
        txt_numIntercambio.setIconTextGap(15);
        add(txt_numIntercambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 140, 20));

        Titulo.setBackground(new java.awt.Color(0, 0, 0));
        Titulo.setFont(new java.awt.Font("Latha", 0, 18)); // NOI18N
        Titulo.setForeground(new java.awt.Color(115, 115, 115));
        Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Titulo.setText("Proximo intercambio");
        Titulo.setAutoscrolls(true);
        Titulo.setIconTextGap(15);
        add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 240, 30));

        DescripcionEstado.setBackground(new java.awt.Color(0, 0, 0));
        DescripcionEstado.setFont(new java.awt.Font("Latha", 0, 16)); // NOI18N
        DescripcionEstado.setForeground(new java.awt.Color(255, 102, 102));
        DescripcionEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DescripcionEstado.setText("-");
        DescripcionEstado.setAutoscrolls(true);
        DescripcionEstado.setIconTextGap(15);
        add(DescripcionEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, 240, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void TxtInput_comparado_n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtInput_comparado_n1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtInput_comparado_n1ActionPerformed

    private void TxtInput_proxIC_n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtInput_proxIC_n1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtInput_proxIC_n1ActionPerformed

    private void TxtInput_proxIC_n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtInput_proxIC_n2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtInput_proxIC_n2ActionPerformed

    private void TxtInput_comparado_n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtInput_comparado_n2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtInput_comparado_n2ActionPerformed

    private void Btn_ResetearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_ResetearMouseClicked
        /*
        ---------------------------------------------------------------------
        RESETEAR ESTE PANEL
        ---------------------------------------------------------------------
        */   
        PanelOrdenamiento pOR = new PanelOrdenamiento();
        pOR.setSize(920, 580);
        pOR.setLocation(0, 0);
        
        contenedor2.removeAll();
        contenedor2.add(pOR);
        contenedor2.revalidate();
        contenedor2.repaint();
    }//GEN-LAST:event_Btn_ResetearMouseClicked

    private void Btn_OrdenarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_OrdenarMouseClicked
        // Cada vez que se clickee este botón se saltara al siguiente paso del ordenamiento
        if(numPasos < shellSort.getNumPasos())
        {
            numPasos += 1;
            actualizarDatVecOrd(); // Actualizar datos del vector ordenado
            limpiarListaVecOrd();  // Limpiar datos reflejados del vector ordenado en pantalla
            mostrarListaVecOrd();  // Representar graficamente los datos del vector ordenado
            actualizarEstadoOrd();
            
            // Si se completan los pasos
            if(numPasos == shellSort.getNumPasos())
            {
                tituloVecORDENADO.setText("Vector ordenado");
                Btn_Ordenar.setVisible(false);
            }
        } 
    }//GEN-LAST:event_Btn_OrdenarMouseClicked

    private void Btn_OrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_OrdenarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Btn_OrdenarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Ordenar;
    private javax.swing.JButton Btn_Resetear;
    private static javax.swing.JLabel DescripcionEstado;
    private javax.swing.JLabel IconCompletado;
    private static javax.swing.JLabel Titulo;
    private static javax.swing.JLabel TituloPanel1;
    private static javax.swing.JLabel TituloPanel10;
    private static javax.swing.JLabel TituloPanel11;
    private static javax.swing.JLabel TituloPanel12;
    private static javax.swing.JLabel TituloPanel3;
    private static javax.swing.JLabel TituloPanel6;
    private static javax.swing.JLabel TituloPanel8;
    private static javax.swing.JLabel TituloPanel9;
    public static javax.swing.JTextField TxtInput_comparado_n1;
    public static javax.swing.JTextField TxtInput_comparado_n2;
    public static javax.swing.JTextField TxtInput_proxIC_n1;
    public static javax.swing.JTextField TxtInput_proxIC_n2;
    private javax.swing.JList<String> VectorOrdenado;
    private javax.swing.JList<String> VectorOriginal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JLabel tituloVecORDENADO;
    private static javax.swing.JLabel txt_numIntercambio;
    private static javax.swing.JLabel txt_numPasos;
    // End of variables declaration//GEN-END:variables
    /*
    ---------------------------------------------------------------------
                     METODOS DEL VECTOR ORIGINAL
    ---------------------------------------------------------------------
    */
    
    // LLENAR DATOS DEL VECTOR ORIGINAL
    public void iniDatVecOrg()
    {
        vecOrg = new String[Tabla.getRowCount()];
        
        // Tomar nombres de la tabla
        for(int i = 0; i < Tabla.getRowCount(); i++)
        {
            vecOrg[i] = (String) Tabla.getValueAt(i,1).toString();
        }
    }
    
    // REPRESENTAR GRÁFICAMENTE LOS DATOS DEL VECTOR ORIGINAL
    public void mostrarVecOrg()
    {
        VectorOriginal.setModel(modeloOrg);
        
        for(int i = 0; i < vecOrg.length; i++)
        {
            modeloOrg.addElement(vecOrg[i]);
        }
    }
    
    
    
    
    /*
    ---------------------------------------------------------------------
                     METODOS DEL VECTOR ORDENADO
    ---------------------------------------------------------------------
    */
    // LLENAR DATOS DEL VECTOR ORDENADO
    public void iniDatVecOrd()
    {
        vecOrd = new String[Tabla.getRowCount()];
        
        // Tomar nombres de la tabla
        for(int i = 0; i < Tabla.getRowCount(); i++)
        {
            vecOrd[i] = (String) Tabla.getValueAt(i,1).toString();
        }
    }
    // ACTIALIZAR DATOS DEL VECTOR ORDENADO
    public void actualizarDatVecOrd()
    {
        /*Antes de actualizar los datos del vector, se sersiora de que el indice 
        actual de la matriz (registroIndices_IC) de la clase del ordenamiento
        no sean nulos*/
        
        if(shellSort.getRegistroIndices_IC(numPasos-1, 0) >= 0)   
        {
            // Primer Indice a intercambiar de (vecOrd)
            int indIC =  shellSort.getRegistroIndices_IC(numPasos-1, 0);
            // Segundo indice a intercambiar de (vecOrd)
            int indIC2 = shellSort.getRegistroIndices_IC(numPasos-1, 1);
            
            // Se hacen los intercambios
            //System.out.println(indIC);
            //System.out.println(indIC2);
            String auxiliar = vecOrd[indIC];
            
            if(vecOrd[indIC2].equals(auxiliar) != true)
            {
                numIC += 1;
            }
            
            vecOrd[indIC] = vecOrd[indIC2];
            vecOrd[indIC2] = auxiliar;
        } 
    }
    
    
    
    // REPRESENTAR GRÁFICAMENTE LOS DATOS DEL VECTOR ORDENADO
    public void mostrarListaVecOrd()
    {
        VectorOrdenado.setModel(modeloOrd);
        
        for(int i = 0; i < vecOrg.length; i++)
        {
            modeloOrd.addElement(vecOrd[i]);
        }
        
        
        // Seleccionar las casillas del listado /////////////////
        
        // Primer Indice a intercambiar de (vecOrd)
        int indIC =  shellSort.getRegistroIndices_IC(numPasos, 0);
        // Segundo indice a intercambiar de (vecOrd)
        int indIC2 = shellSort.getRegistroIndices_IC(numPasos, 1);
        int[] seleccionarIndices = new int [2];
        
        if(shellSort.getRegistroIndices_IC(numPasos, 0) >= 0)   
        {
            String auxiliar = vecOrd[indIC];
            if(vecOrd[indIC2].equals(auxiliar) != true)
            {
                seleccionarIndices[0] = indIC;
                seleccionarIndices[1] = indIC2;
                VectorOrdenado.setSelectedIndices(seleccionarIndices);
            } 
        } 
    }
    
    // LIMPIAR LISTA DEL VECTOR ORDENADO (GRÁFICAMENTE)
    public void limpiarListaVecOrd()
    {
        modeloOrd.clear();
    }
    
    
    
    
    /*
    ---------------------------------------------------------------------
                    ESTADO DEL ORDENAMIENTO (PASO A PASO)
    ---------------------------------------------------------------------
    */
    public void actualizarEstadoOrd()
    {
        actualizarContadores(); // contadores de los numeros de intercambios y pasos
        actualizarCampoProximoIC(); // campos de texto que reflejan la pareja de elementos proximos a intercambiar
        actualizarCampoProximoEC(); // campos de texto que reflejan la pareja de elementos comparados
    }
    
    
    
    private void actualizarCampoProximoIC()
    {
        // Campos de texto (proximo intercambio)---------
        // elemento 1
        TxtInput_proxIC_n1.setText(shellSort.getRegistroIC(numPasos, 0));
        // elemento 2
        TxtInput_proxIC_n2.setText(shellSort.getRegistroIC(numPasos, 1));
        // Descripción 
        DescripcionEstado.setText(shellSort.getRegistroIC(numPasos, 0) + " es mayor que " + 
                                  shellSort.getRegistroIC(numPasos, 1));
    }
    private void actualizarCampoProximoEC()
    {
        // Campos de texto (comparar)---------
        // elemento 1
        TxtInput_comparado_n1.setText(shellSort.getRegistroEC(numPasos, 0));
       // elemento 2
        TxtInput_comparado_n2.setText(shellSort.getRegistroEC(numPasos, 1));
    }
    
    private void actualizarContadores()
    {
        // Reflejar en pantalla el número de intercambios faltantes y totales
        txt_numIntercambio.setText("Intercambio " + numIC + "/" + shellSort.getNumIC());
        
        // Reflejar en pantalla el número de pasos faltantes y totales para que culmine el ordenamiento
        txt_numPasos.setText("Paso " + numPasos + "/" + shellSort.getNumPasos());
    }
}
